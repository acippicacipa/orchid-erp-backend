# Generated by Django 5.2.6 on 2025-10-13 06:23

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(db_index=True, default='0000', max_length=20, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_header_account', models.BooleanField(default=False, help_text='Header accounts cannot have transactions')),
                ('allow_manual_entries', models.BooleanField(default=True, help_text='Allow manual journal entries')),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('tax_account', models.BooleanField(default=False, help_text='Is this a tax-related account?')),
                ('bank_account', models.BooleanField(default=False, help_text='Is this a bank account?')),
                ('cash_account', models.BooleanField(default=False, help_text='Is this a cash account?')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Chart of Accounts',
                'db_table': 'accounting_accounts',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_closed', models.BooleanField(default=False)),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Accounting Period',
                'verbose_name_plural': 'Accounting Periods',
                'db_table': 'accounting_periods',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=20)),
                ('code_prefix', models.CharField(help_text='Prefix for account codes (e.g., 1 for Assets)', max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Account Types',
                'db_table': 'accounting_account_types',
                'ordering': ['code_prefix', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('account_holder', models.CharField(max_length=255)),
                ('branch', models.CharField(blank=True, max_length=255, null=True)),
                ('swift_code', models.CharField(blank=True, max_length=20, null=True)),
                ('iban', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(default='IDR', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'accounting_bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Fiscal Year',
                'verbose_name_plural': 'Fiscal Years',
                'db_table': 'accounting_fiscal_years',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('entry_type', models.CharField(choices=[('MANUAL', 'Manual Entry'), ('SALES', 'Sales Transaction'), ('PURCHASE', 'Purchase Transaction'), ('INVENTORY', 'Inventory Adjustment'), ('PAYMENT', 'Payment'), ('RECEIPT', 'Receipt'), ('ADJUSTMENT', 'Adjustment'), ('CLOSING', 'Closing Entry')], default='MANUAL', max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('POSTED', 'Posted'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('total_debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Journal Entry',
                'verbose_name_plural': 'Journal Entries',
                'db_table': 'accounting_journal_entries',
                'ordering': ['-entry_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('debit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Journal Entry Line',
                'verbose_name_plural': 'Journal Entry Lines',
                'db_table': 'accounting_journal_entry_lines',
            },
        ),
        migrations.CreateModel(
            name='JournalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Journal Item',
                'verbose_name_plural': 'Journal Items',
                'db_table': 'accounting_journal_items',
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
            ],
            options={
                'verbose_name': 'Ledger Entry',
                'verbose_name_plural': 'Ledger Entries',
                'db_table': 'accounting_ledgers',
                'ordering': ['date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('tax_type', models.CharField(choices=[('VAT', 'Value Added Tax (PPN)'), ('INCOME', 'Income Tax (PPh)'), ('SALES', 'Sales Tax'), ('WITHHOLDING', 'Withholding Tax')], max_length=20)),
                ('rate', models.DecimalField(decimal_places=2, help_text='Tax rate as percentage', max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tax Rate',
                'verbose_name_plural': 'Tax Rates',
                'db_table': 'accounting_tax_rates',
                'ordering': ['tax_type', 'name'],
            },
        ),
    ]
